# These tasks must be used in a loop (with_dict: "{{ databases }}") and only in "include" statement.
# This file completely depends on "{{ databases }}" variable.
#
# Used variables:
# - become_name: the name of user, who triggered this script.
# - become_home: the home directory of user, who triggered this script.
#
# Used built-in variables:
# - hostvars: list of data for all defined hosts.
---
- include: ../get-hostname.yml name="{{ item.value.source.from }}"

- name: Set remote host
  set_fact:
    dump_dest:
      remote: "{{ item.value.source.dir }}/{{ item.value.source.db }}.gz"
      local: "{{ webroot }}/backup/{{ item.value.source.db }}.gz"
    # Need to process the name of host and store it in variable because any logic
    # and templating engine are not available for "delegate_to" parameter.
    dump_from: "{{ hostvars[hostname].inventory_hostname }}"

- name: Check for local dump
  stat:
    path: "{{ dump_dest.local }}"
  register: local_dump

# The "mysql_db" module isn't used because the "mysqldb" module for Python might not be installed on remote.
- name: Create dump
  shell: "ssh {{ hostname_ssh.args }} {{ hostname_ssh.host }} \"mysqldump -P{{ item.value.source.port | default('3306') }} -h{{ item.value.source.host | default('localhost') }} -u{{ item.value.source.user | default(mysql.user) }} -p{{ item.value.source.pass | default(mysql.pass) }} {{ item.value.source.db }} | gzip -c > {{ dump_dest.remote }}\""
  register: fetch_dump
  when: "{{ not local_dump.stat.exists }}"

# @todo The "synchronize" isn't work with Ansible 2.0.1 with "delegate_to" parameter.
# Instead of correct SSH credentials for remote it take your WAN IP. Do not be shy test
# this as often as possible, because Ansible is pretty fast developing.
- name: Fetch dump
  shell: "rsync --delay-updates -F --compress --archive --rsh 'ssh {{ hostname_ssh.args }}' {{ hostname_ssh.host }}:{{ dump_dest.remote }} {{ dump_dest.local }}"
  when: " {{ fetch_dump is defined }}"

- name: Import dump
  mysql_db:
    name: "{{ item.value.name }}"
    state: import
    target: "{{ dump_dest.local }}"
    login_user: "{{ mysql.user }}"
    login_password: "{{ mysql.pass }}"
